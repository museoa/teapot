#!/bin/sh

awk -F '	|( +)' 'BEGIN{
  for (i=32; i<256; ++i) c[sprintf("%c",i)]=sprintf("%c",i)
  c["<"]="&lt;"
  c[">"]="&gt;"
  c["&"]="&amp;"
  printf("<html>\n")
  sgmlify=1
}
/^\.br/{
  if (text) printf("<br>")
  next
}
/^\./{
  text=0
}
/^[^.]/{
  text=1
}
/^\.H /{
  gsub(/ \.\\"{{{.*$/,"")
  if (define==0 && troff==0) printf("<h%s>%s</h%s>\n",$2+1,substr($3,1,1)==sprintf("%c",34) ? substr($0,7,length($0)-7) : $3, $2+1)
  next
}
/^\.TL/{
  if (define==0 && troff==0) { printf("<head><title>"); title=1 }
  next
}
/^\.AU/{
  if (define==0 && troff==0) 
  { 
    if (title) printf("%s</title></head>\n<body>\n<center><h1>%s</h1></center>\n",titlestr,titlestr)
    title=0
    authorstr=substr($0,5)
    authorstr=(substr($0,5,1)==sprintf("%c",34) ? substr($0,6,length($0)-6) : substr($0,5))
  }
  next
}
/^\.AF/{
  if (define==0 && troff==0) { if (title) printf("</title></head>\n<body>\n<center><h1>%s</h1></center>\n",titlestr); title=0; }
  next
}
/^\.AS/{
  if (define==0 && troff==0) 
  { 
    if (title) printf("</title></head>\n<body>\n<center><h1>%s</h1></center>\n",titlestr)
    printf("<blockquote>\n")
    title=0
  }
  next
}
/^\.AE/{
  printf("</blockquote>\n")
}
/^\.P$/{
  if (define==0 && troff==0) printf("<p>\n")
  next
}
/^\.BL/{
  if (define==0 && troff==0) printf("<ul>\n")
  list[++level]="bl"
  next
}
/^\.VL/{
  if (define==0 && troff==0) printf("<dl>\n")
  list[++level]="vl"
  next
}
/^\.L[iI]/{
  if (define==0 && troff==0) {
    if (list[level]=="bl") printf("<li>")
    else {
      printf("<dt><b>")
      str=substr($0,5,1)==sprintf("%c",34) ? substr($0,6,length($0)-6) : $2
      for (i=1; i<=length(str); ++i) if (substr(str,i,1)=="\\") printf("\\%c",substr(str,++i,1)); else printf("%s",c[substr(str,i,1)])
      printf("</b>\n<dd>")
    }
  }
  next
}
/^\.LE/{
  if (define==0 && troff==0) {
    if (list[level]=="vl") { printf("</dl>\n"); --level }
    else { printf("</ul>\n"); --level }
  }
  next
}
/^\.DS/{
  if ($2=="CB") centered=1;
  printf("<pre>")
  display=1
  next
}
/^\.DE/{
  printf("</pre>")
  if (centered) centered=0;
  display=0
  next
}
/^\.FS/{
  ++define
  next
}
/^\.FE/{
  --define
  next
}
/^\.TS/{
  sgmlify=0
  if (display) printf("</pre>")
  if (centered) printf("<center>")
  getline
  printf("<table>\n")
  if (match($0,"^[a-z,]*;$")>0) next
}
/^[^<].*\./{
  if (sgmlify==0) { sgmlify--; next; }
}
/^\.TE/{
  sgmlify=1
  printf("</table>\n")
  if (centered) { printf("</center>") }
  if (display) printf("<pre>")
  next
}
/^\.de/{
  define=1
  next
}
/^\.if t \\{/{
  troff=1
  next
}
/^\.if n \\{/{
  nroff=1
  next
}
/^\\}/{
  troff=0
  if (define==0 && nroff) nroff=0
  next
}
/^\.\./{
  define=0
  next
}
/^[^.]/{
  if (sgmlify>0) { s=""; for (i=1; i<=length($0); ++i) if (substr($0,i,1)=="\\") s=s "\\" substr($0,++i,1); else s=s c[substr($0,i,1)] }
  else if (match($0, "^<table")) s=""
  else if (match($0, "^<[a-z]")) s=$0
  else if (sgmlify == 0) s=""
  else { s="<tr><td>" $1 "</td><td>" $2 "</td><td>"; for (i=3; i<99; i++) if (length($i)) s=s " " $i; s=s "</td></tr>\n" }
  if (define==0 && troff==0 && title==0) printf("%s\n",s)
  if (title) titlestr=titlestr s
# if (display) printf("<wbr>\n") 
  next
}
END{
  printf("<address>%s</address>\n</body>\n</html>\n",authorstr)
}'
